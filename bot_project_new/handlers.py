from telegram import ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from utils import firsttime_user
from DbFolder.db_file import DBase
from telegram.ext import ConversationHandler
dbase = DBase()
from emoji import emojize

def start_keyboard():
    smile_work = emojize(':hospital:', use_aliases=True)
    smile_worker = emojize(':construction_worker:', use_aliases=True)
    smile_chair = emojize(':seat:', use_aliases=True)
    start_buttons = [
        [InlineKeyboardButton(text=f'{smile_work} –ù–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É', callback_data='–ù–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É')],
        [InlineKeyboardButton(text=f'{smile_worker} –ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', callback_data='–ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞')],
        [InlineKeyboardButton(text=f'{smile_chair} —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã', callback_data='—É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å')],
    ]
    return InlineKeyboardMarkup(start_buttons)


def find_work_keyboard(tg_id):
    smile_write = emojize(':pencil2:', use_aliases=True)
    smile_look = emojize(':page_with_curl:', use_aliases=True)
    if firsttime_user(tg_id, 'cv'):
        text = f'{smile_write} –ü—Ä–∏—Å—Ç—É–ø–∏–º!'
    else:
        text = f'{smile_write} –ú–æ—è –∞–Ω–∫–µ—Ç–∞'
    find_work_buttons = [
        [
            InlineKeyboardButton(text=text, callback_data='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'),
            # InlineKeyboardButton(text=f'{smile_look} –°–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏', callback_data='–°–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏'),
        ],
    ]
    return InlineKeyboardMarkup(find_work_buttons)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞ (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
def start(update, context):
    dbase.get_or_create_user(update.effective_user)
    reply_markup = start_keyboard()
    text = '''
–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –º–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äì —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è ü¶∑
–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?
'''
    update.message.reply_text(text=text, reply_markup=reply_markup)
    # update.effective_message.reply_html('Use bad_command to cause an error.')

def delete_from_base(update, context):
    tg_id = update.effective_user.id
    user = dbase.db_client.users.find_one({'tg_id': tg_id})
    if user['cv'].get('speciality'):
        dbase.db_client.users.delete_one({'tg_id': tg_id})
        dbase.get_or_create_user(update.effective_user)
        text = '–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã'
        update.callback_query.edit_message_text(text=text, reply_markup=start_keyboard())
    else:
        text = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –Ω–µ—Ç'
        dbase.save_cv(tg_id, 'speciality', '_')
        update.callback_query.edit_message_text(text=text, reply_markup=start_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∏ - –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É
def find_work(update, context):
    update.callback_query.answer()
    reply_markup = find_work_keyboard(update.effective_user.id)
    dbase.get_or_create_user(update.effective_user)
    text = '''
–ü—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ, –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –Ø –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ
–≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –º–Ω–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –í–∞–º –Ω–∞–∏–±–æ–ª–µ–µ
–ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏, –∞ —Ç–∞–∫–∂–µ, –µ—Å–ª–∏ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ,
–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –í–∞—à–µ —Ä–µ–∑—é–º–µ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è.
–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç.
'''
    update.callback_query.edit_message_text(text=text, reply_markup=reply_markup)


def find_worker(update, context):
    dbase.get_or_create_user(update.effective_user)
    text = ("–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é –∏–ª–∏ –∏—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞.")
    keyboard = ReplyKeyboardMarkup([['–°–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é'], ['–°–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—é–º–µ']], resize_keyboard=True)
    update.message.reply_text(text=text, reply_markup=keyboard)


def message_if_wrong(update, context):
    update.message.reply_text('–ó–∞–Ω—è—Ç–Ω–æ:), –Ω–æ –ª—É—á—à–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–æ–∫–æ–π!', reply_markup=start_keyboard())
