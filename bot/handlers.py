from bot.db import DBase
from bot.keyboards import find_work_keyboard, start_keyboard
from bot.utils import firsttime_user

dbase = DBase()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞ (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
def start(update, context):
    dbase.get_or_create_user(update.effective_user)
    reply_markup = start_keyboard()
    text = '''
–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –º–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äì —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è ü¶∑
–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?
'''
    update.message.reply_text(text=text, reply_markup=reply_markup)


def delete_from_base(update, context):
    tg_id = update.effective_user.id
    user = dbase.db_client.users.find_one({'tg_id': tg_id})
    if user['cv'].get('speciality'):
        dbase.db_client.users.delete_one({'tg_id': tg_id})
        dbase.get_or_create_user(update.effective_user)
        text = '–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã'
        update.callback_query.edit_message_text(text=text, reply_markup=start_keyboard())
    else:
        text = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –Ω–µ—Ç'
        dbase.save_cv(tg_id, 'speciality', '_')
        update.callback_query.edit_message_text(text=text, reply_markup=start_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∏ - –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É
def find_work(update, context):
    tg_id = update.effective_user.id
    update.callback_query.answer()
    reply_markup = find_work_keyboard(update.effective_user.id)
    dbase.get_or_create_user(update.effective_user)
    if firsttime_user(tg_id, 'cv'):
        text = '''
–ü—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ, –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –Ø –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ
–≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –º–Ω–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –í–∞–º –Ω–∞–∏–±–æ–ª–µ–µ
–ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏, –∞ —Ç–∞–∫–∂–µ, –µ—Å–ª–∏ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ,
–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –í–∞—à–µ —Ä–µ–∑—é–º–µ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è.
–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç.
'''
    else:
        text = '''
–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É, –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ–µ –∏–∑ –ø–æ–∏—Å–∫–∞.
'''
    update.callback_query.edit_message_text(text=text, reply_markup=reply_markup)


# def find_worker(update, context):
#     dbase.get_or_create_user(update.effective_user)
#     text = ("–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é –∏–ª–∏ –∏—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞.")
#     keyboard = ReplyKeyboardMarkup([['–°–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é'], ['–°–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—é–º–µ']], resize_keyboard=True)
#     update.message.reply_text(text=text, reply_markup=keyboard)


def message_if_wrong(update, context):
    update.message.reply_text('–ó–∞–Ω—è—Ç–Ω–æ:), –Ω–æ –ª—É—á—à–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–æ–∫–æ–π!', reply_markup=start_keyboard())
