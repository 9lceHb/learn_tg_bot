from telegram import ParseMode
from telegram.ext import CallbackQueryHandler, ConversationHandler, Filters, MessageHandler

from bot.db import DBase
from bot.keyboards import (  # STEP_SUPPORT,; STEP_PAYMENT_BACK
    STEP_MANAGE_AREA,
    STEP_SAVE_ISSUE,
    personal_area_keyboard,
    start_keyboard,
)
from bot.payments import payment_conv_handler

dbase = DBase()


def personal_area(update, context):
    update.callback_query.answer()
    tg_id = update.effective_user.id
    user = dbase.db_client.users.find_one({'tg_id': tg_id})
    balance = user['balance']
    text = f'''
–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.
–í–∞—à <b>—Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</b> —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{balance} —Ä—É–±–ª–µ–π</b>.
'''
    reply_markup = personal_area_keyboard()
    update.callback_query.edit_message_text(text=text, reply_markup=reply_markup, parse_mode=ParseMode.HTML)
    return STEP_MANAGE_AREA


def end_describing_area(update, context):
    text = '''
–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –º–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äì —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è ü¶∑
–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?
'''
    update.callback_query.answer()
    update.callback_query.edit_message_text(
        text=text,
        reply_markup=start_keyboard(),
        parse_mode=ParseMode.HTML
    )
    return ConversationHandler.END


def start_support(update, context):
    text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ!'
    chat_id = update.callback_query.message.chat.id
    context.bot.send_message(
        chat_id=chat_id,
        text=text,
        parse_mode=ParseMode.HTML
    )
    return STEP_SAVE_ISSUE


def save_issue(update, context):
    issue_text = update.message.text
    tg_id = update.effective_user.id
    dbase.create_issue(update.effective_user, issue_text)
    user = dbase.db_client.users.find_one({'tg_id': tg_id})
    balance = user['balance']
    reply_markup = personal_area_keyboard()
    text = f'''
–°–ø–∞—Å–∏–±–æ, –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!
–í–∞—à <b>—Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</b> —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{balance} —Ä—É–±–ª–µ–π</b>.
'''
    update.message.reply_text(text=text, reply_markup=reply_markup, parse_mode=ParseMode.HTML)
    return STEP_MANAGE_AREA


def area_fallback(update, context):
    tg_id = update.effective_user.id
    user = dbase.db_client.users.find_one({'tg_id': tg_id})
    balance = user['balance']
    text = f'''
–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.
–í–∞—à <b>—Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</b> —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{balance} —Ä—É–±–ª–µ–π</b>.
'''
    reply_markup = personal_area_keyboard()
    chat_id = update.callback_query.message.chat.id
    context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=reply_markup,
        parse_mode=ParseMode.HTML
    )
    return STEP_MANAGE_AREA


personal_area_handler = ConversationHandler(
    entry_points=[
        CallbackQueryHandler(personal_area, pattern='^' + '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' + '$'),
    ],
    states={
        STEP_MANAGE_AREA: [
            payment_conv_handler,
            CallbackQueryHandler(start_support, pattern='^' + 'STEP_SUPPORT' + '$'),
        ],
        STEP_SAVE_ISSUE: [MessageHandler(Filters.text, save_issue)]
    },
    fallbacks=[
        MessageHandler(Filters.text & (~ Filters.command) | Filters.photo | Filters.video, area_fallback),
        CallbackQueryHandler(end_describing_area, pattern='^' + 'back_menu' + '$'),
        ],
    allow_reentry=True,
    per_chat=False
)
